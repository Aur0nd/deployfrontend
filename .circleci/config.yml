version: 2.1
commands:
  destroy_infrastructure:
    steps:
      - run:
          name: Destroy env
          command: |
            aws cloudformation delete-stack --stack-name ${CIRCLE_WORKFLOW_ID}


jobs:
  deploy_infrastructure:
    docker:
     - image: amazon/aws-cli
       auth:
        username: $ubuntuID
        password: $ubuntukey
    steps:
    - checkout
    - run:
        name: Create Backend
        command: |
            aws cloudformation deploy \
              --template-file bucket.yml \
              --stack-name "${CIRCLE_WORKFLOW_ID}" \
              --parameter-overrides NAME="${CIRCLE_WORKFLOW_ID}"
      #- destroy_environment
        #when: on_fail

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["be:21:ae:6a:5e:7b:6f:ef:9b:cb:31:21:d4:69:93:bc"]
        - run:  
            name: Install dependencies
            command: | #Install the dependencies
              apk add --update ansible  
        - run:
            name: Execute playbook
            command: |
              ansible-playbook main.yml -i inventory.txt

  smoketest:
    docker:
      - image: circleci/node:13.8.0 
    steps:
        - run: apk add --update curl
        - run:
            name: smoke test.
            command: |
              URL="34.220.2.77:3000"
              if curl -s --head ${URL} # test if website exists
              then
               return 0
              else
               return 1
              fi
              

workflows:
  workflow:
    - deploy_instance
    - smoke_test
        requires:
          deploy_instance
